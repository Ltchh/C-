<<GITml>>

本地文件  =>  暂存区  =>  本地仓库

git add	--all	//推送暂存区	//后面跟 --all 同理下面也是这么使用 --all(全部)

git commt --all -m更新       	//推送本地仓库

git push -u origin master 	//推送到远端 

exit //退出

-----------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------

clear	//清屏，清除当前页的显示，实质上是把终端显示向后翻了一页，没有真正的清屏，向前翻还可以看见历史内容

reset 	//清屏，清除显示区所有内容且历史输入也被清除了，这个是真正的清屏，清的非常彻底【用的少】 ||\||\||\||\||

cd 	//切换到哪个目录下， 如 cd e:\fff 切换 E 盘下面的fff 目录。 当我们用cd 进入文件夹时,我们可以使用 通配符*,
	   cd f*, 如果E盘下只有一个f开头的文件夹,它就会进入到这个文件夹.

cd ..	//回退到上一个目录， 注意，cd 和两个点点(..)之间有一个空格。

pwd 	//显示当前目录路径。

ls(ll):	//都是列出当前目录中的所有文件，只不过ll(两个ll)列出的内容更为详细。

touch 	 //新建一个文件 如 touch index.js 就会在当前目录下新建一个index.js文件。

rm	//删除一个文件, rm index.js 就会把index.js文件删除.

mkdir	//新建一个目录,就是新建一个文件夹. 如mkdir src 新建src 文件夹.

rm -r 	 //删除一个文件夹, rm -r src 删除src目录， 好像不能用通配符。

mv 	//移动文件, mv index.html src index.html 是我们要移动的文件, src 是目标文件夹,当然, 这样写,必须保证文件和目标文件夹在同一目录下.

-----------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------

git init  		 	//初始化仓库
git reset HEAD 文件		//从暂存区撤销
git commit -m 更新内容	//上传到本地仓库  -m是注释;如编程后的// 注释

-----------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------
	
git reflog		//显示旧的提交日志
git status		//查看目录与暂存区的文件状态
git log --pretty=oneline	//简洁提示上传信息

-----------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------
	
版本回退
git log			//查看提交的信息  //显示提交的信息/日志 

git reset --hard HEAD^ 	//返回上一个版本 //^一个箭头表示退几个版本(倒数)

git reset --hard HEAD~1	//退回第一个版本  //1表示创建的几个版本(正数)

git reset --hard 字符串	//回到指定的版本

git reflog			//显示旧的提交日志

git reset --hard 字符串	//回到指定的版本

git checkout 文件名		//从本地库中拉取被删除的文件 //文件名需要跟后缀

git add 文件名		//删除本地库里的文件        //本地文件被删除是一种修改,然后上传暂存区在上传本地库就完成了一次库删除工

git rm 文件名		//直接删除了本地库里的文件

git ls-files		//查看本地仓库的文件

git branch 分支名	  	//在本地创建一个分支

git branch 		//查看当前自己所在的分支

git branch -a  		//查看所有分支以及自己当前所在的分支

git checkout 分支名 		//切换分支

git checkout -b 分支名 	//新增并切换到改分支

git push --set-upstream origin 分支名 //推送新分支到远程

git branch -d 分支名	 	//删除本地分支

git push origin -d 分支名 	//删除远程分支


-----------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------

! [rejected] master -> master (fetch first) error: failed to push some refs to ’ 。。。’

出现这个问题是因为github中的README.md文件不在本地代码目录中，可以通过如下命令进行代码合并

git pull --rebase origin master
然后
git push -u origin master 	//推送到远端

-----------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/Ltchh/C-.git
git push -u origin main


